{"version":3,"sources":["Pages/HomeScreen/index.jsx","Stores/VehicleModel.js","Stores/VehicleMake.js","Common/mockData.js","Stores/RootStore.js","Common/sortItems.js","Common/getCurrentCards.js","Context/RootStateContext.js","Components/Searchfield/index.jsx","Components/SortButton/index.jsx","Components/SortOption/index.jsx","Components/SortContainer/index.jsx","Components/ListManipulator/index.jsx","Common/makeInputBlank.js","Components/EditCardForm/index.jsx","Components/Card/index.jsx","Components/CardList/index.jsx","Components/Pagination/index.jsx","Pages/ListScreen/index.jsx","Components/AddCardForm/index.jsx","Pages/AddScreen/index.jsx","Pages/EditScreen/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","className","to","VehicleModel","rootStore","addCar","make","model","cars","push","id","nanoid","resetModel","setModel","this","decorate","observable","action","VehicleMake","vehicleModel","resetMake","setMake","mockData","isNew","price","RootStore","slice","sortParams","sortBy","direction","searchText","currentPage","cardsPerPage","setCurrentPage","e","target","changeCarSpec","carToChange","carIndex","indexOf","changeSearchText","event","value","setSortParams","vehicleMake","array","sortByKey","sort","a","b","toLowerCase","filter","car","includes","indexOfLastCard","indexOfFirstCard","getCurrentCards","filteredCars","pageNumbers","i","Math","ceil","length","pageNumbersArray","computed","currentCars","RootStateContext","React","createContext","RootStateProvider","children","stores","Provider","useRootStore","useContext","Searchfield","onChange","type","placeholder","defaultValue","SortButton","onClick","SortOption","props","SortContainer","ListManipulator","makeInputBlank","input","EditCardForm","onSubmit","preventDefault","setCardClicked","htmlFor","name","observer","withRouter","useState","cardClicked","normalCard","location","pathname","map","key","pageNum","AddCardForm","AddScreen","Edit","App","exact","path","component","HomeScreen","EditScreen","ListScreen","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+fAeeA,MAXf,WACI,OACI,yBAAKC,UAAU,WACX,+DACA,kBAAC,IAAD,CAAMC,GAAG,SACL,4BAAQD,UAAU,aAAlB,oB,4CCNVE,EACF,WAAYC,GAAY,IAAD,gCAMvBC,OAAS,SAACC,EAAMC,GACRD,GAAQC,GACZ,EAAKH,UAAUI,KAAKC,KAAK,CAAEH,OAAMC,QAAOG,GAAIC,iBARzB,KAYvBC,WAAa,kBAAM,EAAKL,MAAQ,IAZT,KAevBM,SAAW,SAACN,GACM,KAAVA,IACA,EAAKA,MAAQA,IAhBjBO,KAAKV,UAAYA,EACjBU,KAAKP,MAAQ,IAoBrBQ,YAASZ,EAAc,CACnBI,MAAOS,IACPX,OAAQY,IACRJ,SAAUI,IACVL,WAAYK,MAGDd,QC/BTe,EACF,WAAYd,GAAY,IAAD,gCAMvBC,OAAS,SAACE,GACN,EAAKH,UAAUe,aAAad,OAAO,EAAKC,KAAMC,IAP3B,KAWvBa,UAAY,kBAAM,EAAKd,KAAO,IAXP,KAcvBe,QAAU,SAACf,GACM,KAATA,IACA,EAAKA,KAAOA,IAfhBQ,KAAKV,UAAYA,EACjBU,KAAKR,KAAO,IAmBpBS,YAASG,EAAa,CAClBZ,KAAMU,IACNX,OAAQY,IACRG,UAAWH,IACXI,QAASJ,MAGEC,QCwLAI,EArNE,CACb,CACIhB,KAAM,OACNC,MAAO,gBACPgB,OAAO,EACPC,MAAO,IACPd,GAAIC,eAER,CACIL,KAAM,UACNC,MAAO,MACPgB,OAAO,EACPC,MAAO,IACPd,GAAIC,eAER,CACIL,KAAM,SACNC,MAAO,cACPgB,OAAO,EACPC,MAAO,IACPd,GAAIC,eAER,CACIL,KAAM,OACNC,MAAO,OACPgB,OAAO,EACPC,MAAO,KACPd,GAAIC,eAER,CACIL,KAAM,eACNC,MAAO,SACPgB,OAAO,EACPC,MAAO,IACPd,GAAIC,eAER,CACIL,KAAM,UACNC,MAAO,cACPgB,OAAO,EACPC,MAAO,MACPd,GAAIC,eAER,CACIL,KAAM,UACNC,MAAO,MACPgB,OAAO,EACPC,MAAO,IACPd,GAAIC,eAER,CACIL,KAAM,UACNC,MAAO,kBACPgB,OAAO,EACPC,MAAO,IACPd,GAAIC,eAER,CACIL,KAAM,WACNC,MAAO,QACPgB,OAAO,EACPC,MAAO,IACPd,GAAIC,eAER,CACIL,KAAM,SACNC,MAAO,QACPgB,OAAO,EACPC,MAAO,IACPd,GAAIC,eAER,CACIL,KAAM,UACNC,MAAO,aACPgB,OAAO,EACPC,MAAO,IACPd,GAAIC,eAER,CACIL,KAAM,MACNC,MAAO,uBACPgB,OAAO,EACPC,MAAO,IACPd,GAAIC,eAER,CACIL,KAAM,UACNC,MAAO,WACPgB,OAAO,EACPC,MAAO,IACPd,GAAIC,eAER,CACIL,KAAM,UACNC,MAAO,WACPgB,OAAO,EACPC,MAAO,IACPd,GAAIC,eAER,CACIL,KAAM,WACNC,MAAO,UACPgB,OAAO,EACPC,MAAO,IACPd,GAAIC,eAER,CACIL,KAAM,OACNC,MAAO,QACPgB,OAAO,EACPC,MAAO,KACPd,GAAIC,eAER,CACIL,KAAM,SACNC,MAAO,QACPgB,OAAO,EACPC,MAAO,IACPd,GAAIC,eAER,CACIL,KAAM,WACNC,MAAO,cACPgB,OAAO,EACPC,MAAO,KACPd,GAAIC,eAER,CACIL,KAAM,UACNC,MAAO,UACPgB,OAAO,EACPC,MAAO,KACPd,GAAIC,eAER,CACIL,KAAM,UACNC,MAAO,gBACPgB,OAAO,EACPC,MAAO,IACPd,GAAIC,eAER,CACIL,KAAM,SACNC,MAAO,gBACPgB,OAAO,EACPC,MAAO,IACPd,GAAIC,eAER,CACIL,KAAM,UACNC,MAAO,KACPgB,OAAO,EACPC,MAAO,KACPd,GAAIC,eAER,CACIL,KAAM,UACNC,MAAO,KACPgB,OAAO,EACPC,MAAO,IACPd,GAAIC,eAER,CACIL,KAAM,QACNC,MAAO,SACPgB,OAAO,EACPC,MAAO,KACPd,GAAIC,eAER,CACIL,KAAM,eACNC,MAAO,eACPgB,OAAO,EACPC,MAAO,KACPd,GAAIC,eAER,CACIL,KAAM,UACNC,MAAO,iBACPgB,OAAO,EACPC,MAAO,KACPd,GAAIC,eAER,CACIL,KAAM,UACNC,MAAO,SACPgB,OAAO,EACPC,MAAO,IACPd,GAAIC,eAER,CACIL,KA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","file":"static/js/main.a88ce075.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Home() {\r\n    return(\r\n        <div className=\"welcome\">\r\n            <h1>Hi, welcome to my test project!</h1>\r\n            <Link to=\"/list\">\r\n                <button className=\"check-app\">Check the app</button>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import { nanoid } from 'nanoid';\r\nimport { decorate, observable, action } from \"mobx\";\r\n\r\nclass VehicleModel {\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        this.model = '';\r\n    }\r\n\r\n    // add\r\n    addCar = (make, model) => {\r\n        if (make && model)\r\n        this.rootStore.cars.push({ make, model, id: nanoid() });\r\n    };\r\n\r\n    // add and edit\r\n    resetModel = () => this.model = '';\r\n    \r\n    // add and edit\r\n    setModel = (model) => {\r\n        if (model !== '') {\r\n            this.model = model;\r\n        }\r\n    }\r\n}\r\n\r\ndecorate(VehicleModel, {\r\n    model: observable,\r\n    addCar: action,\r\n    setModel: action,\r\n    resetModel: action,\r\n});\r\n\r\nexport default VehicleModel;","import { decorate, observable, action } from \"mobx\";\r\n\r\nclass VehicleMake {\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        this.make = '';\r\n    }\r\n\r\n    // add\r\n    addCar = (model) => {\r\n        this.rootStore.vehicleModel.addCar(this.make, model);\r\n    };\r\n\r\n    // add and edit\r\n    resetMake = () => this.make = '';\r\n\r\n    // edit\r\n    setMake = (make) => {\r\n        if (make !== '') {\r\n            this.make = make;\r\n        }\r\n    };\r\n}\r\n\r\ndecorate(VehicleMake, {\r\n    make: observable,\r\n    addCar: action,\r\n    resetMake: action,\r\n    setMake: action,\r\n});\r\n\r\nexport default VehicleMake;","import { nanoid } from 'nanoid';\r\n\r\nconst mockData = [\r\n    {\r\n        make: 'Mini',\r\n        model: 'Cooper JCW GP',\r\n        isNew: true,\r\n        price: 50000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Ferrari',\r\n        model: 'F50',\r\n        isNew: false,\r\n        price: 3000000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Subaru',\r\n        model: 'Impreza 22B',\r\n        isNew: false,\r\n        price: 100000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Audi',\r\n        model: 'RSQ8',\r\n        isNew: true,\r\n        price: 140000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Aston Martin',\r\n        model: 'Rapide',\r\n        isNew: false,\r\n        price: 60000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Bentley',\r\n        model: 'Flying Spur',\r\n        isNew: true,\r\n        price: 275000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Porsche',\r\n        model: '935',\r\n        isNew: true,\r\n        price: 1000000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Porsche',\r\n        model: 'Cayenne Turbo S',\r\n        isNew: true,\r\n        price: 200000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Maserati',\r\n        model: 'Coupe',\r\n        isNew: false,\r\n        price: 20000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Fisker',\r\n        model: 'Karma',\r\n        isNew: false,\r\n        price: 40000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Ferrari',\r\n        model: 'F8 Tributo',\r\n        isNew: true,\r\n        price: 300000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'GMC',\r\n        model: 'Sierra 3500HD Denali',\r\n        isNew: true,\r\n        price: 80000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'McLaren',\r\n        model: '570S GT4',\r\n        isNew: true,\r\n        price: 200000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Porsche',\r\n        model: 'Panamera',\r\n        isNew: false,\r\n        price: 30000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Mercedes',\r\n        model: 'G63 AMG',\r\n        isNew: true,\r\n        price: 200000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Ford',\r\n        model: 'F-650',\r\n        isNew: true,\r\n        price: 150000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Pagani',\r\n        model: 'Zonda',\r\n        isNew: false,\r\n        price: 6000000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Mercedes',\r\n        model: 'G63 AMG 6x6',\r\n        isNew: true,\r\n        price: 1500000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Ferrari',\r\n        model: '599 GTO',\r\n        isNew: false,\r\n        price: 550000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Porsche',\r\n        model: '911 Speedster',\r\n        isNew: true,\r\n        price: 300000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Jaguar',\r\n        model: 'XE SV Project',\r\n        isNew: true,\r\n        price: 200000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'McLaren',\r\n        model: 'GT',\r\n        isNew: true,\r\n        price: 250000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'McLaren',\r\n        model: 'P1',\r\n        isNew: false,\r\n        price: 2000000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Lexus',\r\n        model: 'LX5709',\r\n        isNew: true,\r\n        price: 95000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Aston Martin',\r\n        model: 'Superleggera',\r\n        isNew: true,\r\n        price: 350000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Bentley',\r\n        model: 'Continental GT',\r\n        isNew: true,\r\n        price: 250000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Bugatti',\r\n        model: 'Chiron',\r\n        isNew: false,\r\n        price: 3000000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'BMW',\r\n        model: 'i3',\r\n        isNew: true,\r\n        price: 50000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Kia',\r\n        model: 'K900',\r\n        isNew: true,\r\n        price: 60000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Aston Martin',\r\n        model: 'Vanquish S Volante',\r\n        isNew: true,\r\n        price: 340000,\r\n        id: nanoid(),\r\n    },\r\n];\r\n\r\nexport default mockData;","import VehicleModel from './VehicleModel';\r\nimport VehicleMake from './VehicleMake';\r\nimport { decorate, observable, computed, action } from 'mobx';\r\nimport mockData from '../Common/mockData';\r\nimport sortItems from '../Common/sortItems';\r\nimport getCurrentCards from '../Common/getCurrentCards';\r\n\r\nclass RootStore {\r\n    cars = mockData.slice();\r\n\r\n    sortParams = {\r\n        sortBy: 'make',\r\n        direction: 'ascending',\r\n    };\r\n\r\n    searchText = '';\r\n    currentPage = 1;\r\n    cardsPerPage = 6;\r\n    \r\n    // list\r\n    setCurrentPage = (e) => {\r\n        this.currentPage = e.target.id;\r\n    }\r\n\r\n    // edit\r\n    changeCarSpec = (carToChange, make, model) => {\r\n        const carIndex = this.cars.indexOf(carToChange);\r\n        this.cars[carIndex].make = make || carToChange.make;\r\n        this.cars[carIndex].model = model || carToChange.model;\r\n    };\r\n\r\n    // list\r\n    changeSearchText = (event) => {\r\n        this.searchText = event.target.value;\r\n    };\r\n\r\n    // list\r\n    setSortParams = (sortBy, direction) => {\r\n        this.sortParams = {sortBy, direction};\r\n    };\r\n    \r\n    constructor() {\r\n        this.vehicleMake = new VehicleMake(this);\r\n        this.vehicleModel = new VehicleModel(this);\r\n    }\r\n\r\n    // list\r\n    get filteredCars() {\r\n        const sortedCars = sortItems(this.cars.slice(), this.sortParams.direction, this.sortParams.sortBy);\r\n    \r\n        return sortedCars.filter(car => {\r\n            return(\r\n                car.make.toLowerCase().includes(this.searchText)\r\n                || car.model.toLowerCase().includes(this.searchText)\r\n            );\r\n        });\r\n    }\r\n\r\n    // list\r\n    get currentCars() {\r\n        return getCurrentCards(this.filteredCars, this.currentPage, this.cardsPerPage);\r\n    }\r\n\r\n    // list\r\n    get pageNumbersArray() {\r\n        const pageNumbers = [];\r\n\r\n        for (let i = 1; i <= Math.ceil(this.filteredCars.length / this.cardsPerPage); i++) {\r\n            pageNumbers.push(i);\r\n        }\r\n\r\n        return pageNumbers;\r\n    }\r\n}\r\n\r\ndecorate(RootStore, {\r\n    cars: observable,\r\n    searchText: observable,\r\n    sortParams: observable,\r\n    currentPage: observable,\r\n    cardsPerPage: observable,\r\n    pageNumbersArray: computed,\r\n    setCurrentPage: action,\r\n    filteredCars: computed,\r\n    currentCars: computed,\r\n    changeSearchText: action,\r\n    setSortParams: action,\r\n});\r\n\r\nexport default RootStore;","export default function sortItems (array, direction, sortByKey) {\r\n    if (direction === 'ascending') {\r\n        return array.sort((a, b) => {\r\n            if (typeof a[sortByKey] === 'string') {\r\n                return a[sortByKey].toLowerCase() > b[sortByKey].toLowerCase() ? 1 : -1;\r\n            } else {\r\n                return a[sortByKey] > b[sortByKey] ? 1 : -1;\r\n            }\r\n        });\r\n    } else if (direction === 'descending') {\r\n        return array.sort((a, b) => {\r\n            if (typeof a[sortByKey] === 'string') {\r\n                return a[sortByKey].toLowerCase() < b[sortByKey].toLowerCase() ? 1 : -1;\r\n            } else {\r\n                return a[sortByKey] < b[sortByKey] ? 1 : -1;\r\n            }\r\n        });\r\n    }\r\n};","export default function getCurrentCards(array, currentPage, cardsPerPage) {\r\n    const indexOfLastCard = currentPage * cardsPerPage;\r\n    const indexOfFirstCard = indexOfLastCard - cardsPerPage;\r\n    const currentCards = array.slice(indexOfFirstCard, indexOfLastCard);\r\n    return currentCards;\r\n}","import React from 'react';\r\nimport RootStore from '../Stores/RootStore';\r\n\r\nconst RootStateContext = React.createContext(null);\r\n\r\nexport function RootStateProvider({children}) {\r\n    const stores = new RootStore();\r\n\r\n    return (\r\n        <RootStateContext.Provider value={stores}>\r\n            {children}\r\n        </RootStateContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useRootStore() {\r\n    return React.useContext(RootStateContext);\r\n}","import React from 'react';\r\nimport './styles.css';\r\nimport { useRootStore } from '../../Context/RootStateContext';\r\n\r\nfunction Searchfield() {\r\n    const rootStore = useRootStore();\r\n    const { changeSearchText, searchText } = rootStore;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Find a car</h2>\r\n            <input\r\n                className=\"text-input\"\r\n                onChange={changeSearchText}\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                defaultValue={searchText}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Searchfield;\r\n","import React from 'react';\r\nimport './styles.css';\r\nimport { useRootStore } from '../../Context/RootStateContext';\r\n\r\nfunction SortButton({ sortBy, direction }) {\r\n    const rootStore = useRootStore();\r\n\r\n    return(\r\n        <button\r\n            className=\"sort-button\"\r\n            onClick={() => rootStore.setSortParams(sortBy, direction)}\r\n        >\r\n            Sort {direction}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default SortButton;\r\n","import React from 'react';\r\nimport SortButton from '../SortButton';\r\nimport './styles.css';\r\n\r\nfunction SortOption(props) {\r\n    return (\r\n        <div className=\"sort-option\">\r\n            <h3>Sort by {props.sortBy}</h3>\r\n            <SortButton\r\n                sortBy={props.sortBy}\r\n                direction=\"ascending\"\r\n            />\r\n            <SortButton\r\n                sortBy={props.sortBy}\r\n                direction=\"descending\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SortOption;\r\n","import React from 'react';\r\nimport SortOption from '../SortOption';\r\n\r\nfunction SortContainer() {\r\n    return (\r\n        <div>\r\n            <SortOption sortBy=\"make\" />\r\n            <SortOption sortBy=\"model\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SortContainer;\r\n","import React from 'react';\r\nimport Searchfield from '../Searchfield';\r\nimport SortContainer from '../SortContainer';\r\n\r\nfunction ListManipulator() {\r\n    return (\r\n        <div>\r\n            <Searchfield />\r\n            <SortContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListManipulator;\r\n","export default function makeInputBlank(input) {\r\n    input.value = '';\r\n}","import React from 'react';\r\nimport './styles.css'\r\nimport makeInputBlank from '../../Common/makeInputBlank';\r\nimport { useRootStore } from '../../Context/RootStateContext';\r\n\r\nfunction EditCardForm(props) {\r\n    const rootStore = useRootStore();\r\n    const { vehicleModel, vehicleMake } = rootStore;\r\n    \r\n    function onFormSubmit(e) {\r\n        e.preventDefault();\r\n        makeInputBlank(e.target.make);\r\n        makeInputBlank(e.target.model);\r\n        rootStore.changeCarSpec(props.car, vehicleMake.make, vehicleModel.model);\r\n        vehicleMake.resetMake();\r\n        vehicleModel.resetModel();\r\n        props.setCardClicked(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card-container edit-card\">\r\n            <form\r\n                className=\"add-card-form\"\r\n                onSubmit={onFormSubmit}\r\n            >\r\n                <label htmlFor=\"make\">Make:</label>\r\n                <input\r\n                    className=\"text-input\"\r\n                    type=\"text\"\r\n                    id=\"make\"\r\n                    name=\"make\"\r\n                    placeholder={props.car.make}\r\n                    onChange={(e) => vehicleMake.setMake(e.target.value)}\r\n                    />\r\n\r\n                <label htmlFor=\"model\">Model:</label>\r\n                <input\r\n                    className=\"text-input\"\r\n                    type=\"text\"\r\n                    placeholder={props.car.model}\r\n                    id=\"model\"\r\n                    name=\"model\"\r\n                    onChange={(e) => vehicleModel.setModel(e.target.value)}\r\n                />\r\n\r\n                <button\r\n                    className=\"check-app add\"\r\n                    type=\"submit\"\r\n                >\r\n                        Edit car\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditCardForm;\r\n","import React from 'react';\r\nimport './styles.css';\r\nimport { observer } from 'mobx-react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport EditCardForm from '../EditCardForm';\r\n\r\nfunction Card(props) {\r\n    const [cardClicked, setCardClicked] = React.useState(false);\r\n    const normalCard = (\r\n        <div \r\n            className=\"card-container\"\r\n            onClick={() => props.location.pathname === '/edit' && setCardClicked(true)}\r\n        >\r\n            <h3 className=\"car-make\">{props.car.make}</h3>\r\n            <p>{props.car.model}</p>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                cardClicked\r\n                    ? <EditCardForm setCardClicked={setCardClicked} car={props.car} />\r\n                    : normalCard\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default observer(withRouter(Card));\r\n","import React from 'react';\r\nimport Card from '../Card';\r\nimport './styles.css';\r\nimport { observer } from 'mobx-react';\r\nimport { useRootStore } from '../../Context/RootStateContext';\r\n\r\nfunction CardList() {\r\n    const rootStore = useRootStore();\r\n    \r\n    return (\r\n        <div className='card-list'>\r\n            {\r\n               rootStore.currentCars.length\r\n                    ? rootStore.currentCars.map(car => {\r\n                        return (\r\n                            <Card \r\n                                key={car.id}\r\n                                car={car}\r\n                            />\r\n                        );\r\n                    })\r\n                    : <h3>No cars yet, please add some</h3>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default observer(CardList);\r\n","import React from 'react';\r\nimport { useRootStore } from '../../Context/RootStateContext';\r\nimport './styles.css';\r\nimport { observer } from 'mobx-react';\r\n\r\nfunction Pagination() {\r\n    const rootStore = useRootStore();\r\n    \r\n    return (\r\n        <div>\r\n            {\r\n                rootStore.pageNumbersArray.map(pageNum => {\r\n                    return (\r\n                        <button\r\n                            className=\"page-button\"\r\n                            key={pageNum}\r\n                            id={pageNum}\r\n                            onClick={rootStore.setCurrentPage}\r\n                        >\r\n                            {pageNum}\r\n                        </button>\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default observer(Pagination);\r\n","import React from 'react';\r\nimport './styles.css';\r\nimport { Link } from 'react-router-dom';\r\nimport ListManipulator from '../../Components/ListManipulator';\r\nimport CardList from '../../Components/CardList';\r\nimport Pagination from '../../Components/Pagination';\r\nimport { observer } from 'mobx-react';\r\n\r\nfunction ListScreen() {\r\n    return (\r\n        <div className=\"Main\">\r\n            <h1>Cars</h1>\r\n            <Link className=\"link edit\" to=\"/edit\">Edit a car</Link>\r\n            <Link className=\"link add\" to=\"/add\">Add a car</Link>\r\n            <ListManipulator />\r\n            <CardList />\r\n            <Pagination />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default observer(ListScreen);\r\n","import React from 'react';\r\nimport { useRootStore } from '../../Context/RootStateContext';\r\nimport makeInputBlank from '../../Common/makeInputBlank';\r\nimport './styles.css';\r\n\r\nfunction AddCardForm() {\r\n    const rootStore = useRootStore();\r\n    const { vehicleModel, vehicleMake } = rootStore;\r\n    \r\n    function onFormSubmit(e) {\r\n        e.preventDefault();\r\n        makeInputBlank(e.target.make);\r\n        makeInputBlank(e.target.model);\r\n        vehicleMake.addCar(vehicleModel.model);\r\n        vehicleMake.resetMake();\r\n        vehicleModel.resetModel();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form\r\n                className=\"add-card-form\"\r\n                onSubmit={onFormSubmit}\r\n            >\r\n                <label htmlFor=\"make\">Make:</label>\r\n                <input\r\n                    className=\"text-input\"\r\n                    type=\"text\"\r\n                    id=\"make\"\r\n                    name=\"make\"\r\n                    onChange={(e) => vehicleMake.setMake(e.target.value)}\r\n                    />\r\n\r\n                <label htmlFor=\"model\">Model:</label>\r\n                <input\r\n                    className=\"text-input\"\r\n                    type=\"text\"\r\n                    id=\"model\"\r\n                    name=\"model\"\r\n                    onChange={(e) => vehicleModel.setModel(e.target.value)}\r\n                />\r\n\r\n                <button\r\n                    className=\"check-app add\"\r\n                    type=\"submit\"\r\n                >\r\n                        Make car\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddCardForm;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AddCardForm from '../../Components/AddCardForm';\r\nimport './styles.css';\r\n\r\nfunction AddScreen() {\r\n    return (\r\n        <div className=\"screen add-screen\">\r\n            <h2>Add a car</h2>\r\n            <h3>Fill the fields to add a new car to the list</h3>\r\n            <Link className=\"link\" to=\"/list\">\r\n                <button className=\"go-back-button\">Go back to list</button>\r\n            </Link>\r\n            <AddCardForm />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddScreen;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './styles.css';\r\nimport CardList from '../../Components/CardList';\r\n\r\nfunction Edit() {\r\n    return (\r\n        <div className=\"screen\">\r\n            <h2>Edit a card</h2>\r\n            <h3>Click on a card to edit it</h3>\r\n            <Link to=\"/list\">\r\n                <button className=\"go-back-button\">Go back to list</button>\r\n            </Link>\r\n            <CardList />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Edit;\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport HomeScreen from './Pages/HomeScreen';\nimport ListScreen from './Pages/ListScreen';\nimport AddScreen from './Pages/AddScreen';\nimport EditScreen from './Pages/EditScreen';\n// import RootStore from './Stores/RootStore';\n\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={HomeScreen} />\n        <Route exact path=\"/add\" component={AddScreen} />\n        <Route exact path=\"/edit\" component={EditScreen} />\n        <Route exact path=\"/list\" component={ListScreen} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { RootStateProvider } from './Context/RootStateContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <RootStateProvider>\n      <App />\n    </RootStateProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}